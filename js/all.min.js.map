{"version":3,"file":"all.min.js","sources":["../../src/js/components/show-more.ts","../../src/js/components/defaults.ts","../../src/js/components/animate.ts","../../src/js/all.ts"],"sourcesContent":["/**\n * Show More Button & Rows\n */\n\n//  This is useful since GHL's built-in show/hide section feature on buttons requires\n//  the element to be shown is already hidden in the editor. Hidden elements are hard\n//  to edit since they need to be manually unhidden in the layers panel, edited, and\n//  then hidden again.\n//\n//  To use this Show More feature, add a .show-more class to a trigger button and then\n//  add the .show-more class to one or more rows beneath the button. On load, the rows\n//  will be auto hidden until the button is clicked.\n\nconst SEL_BTN_MORE = \".show-more-btn\"\nconst SEL_BTN_LESS = \".show-less-btn\"\nconst SEL_ROWS = \".c-row.show-more\"\n// Class added to parent of .show-more-btn when button is clicked (\"enabled\")\nconst ENABLED_CLASS = \"show-more-enabled\"\n// Added to show more wrappers to hide them before show more button is clicked\nconst HIDE_CLASS = \"show-more-hide\"\n// Wrapper elements containing .show-more\nconst WRAPPER_CLASS = \"show-more-wrapper\"\n// Class added to elements when show more is disabled\nconst DISABLED_CLASS = \"show-more-disabled\"\n\ntype Listener = (this: HTMLElement, event: Event) => void\n\nconst addClickListeners = (btnRow: Element, listener: Listener) => {\n  btnRow\n    .querySelectorAll(`${SEL_BTN_MORE},${SEL_BTN_LESS}`)\n    .forEach((btn: Element) => {\n      btn.addEventListener(\"click\", listener)\n    })\n}\n\nconst observeAndListen = (\n  trigger: HTMLElement,\n  btnContainer: HTMLElement,\n  moreElems: NodeListOf<HTMLElement>\n) => {\n  function onClick(this: HTMLElement, event: Event) {\n    event.preventDefault()\n    event.stopImmediatePropagation()\n\n    // Disconnect the observer since we know clicks are working\n    observer.disconnect()\n\n    const enabled = btnContainer.classList.contains(ENABLED_CLASS)\n    moreElems.forEach((elem) => {\n      elem.classList[enabled ? \"add\" : \"remove\"](HIDE_CLASS)\n    })\n    // Add/remove .show-more-enabled to button container\n    // This triggers css to change which buttons are displayed\n    btnContainer.classList[enabled ? \"remove\" : \"add\"](ENABLED_CLASS)\n  }\n\n  if (!trigger.parentNode || !btnContainer) {\n    return\n  }\n\n  const observer = new MutationObserver((list, obs) => {\n    // Trigger removed from DOM\n    if (!trigger.parentNode) {\n      // Cleanup old listener\n      trigger.removeEventListener(\"click\", onClick)\n      // Attach new listeners\n      addClickListeners(btnContainer, onClick)\n    }\n  })\n  observer.observe(trigger.parentNode, { childList: true })\n  addClickListeners(btnContainer, onClick)\n}\n\nconst run = () => {\n  // Get all trigger elements\n  document.querySelectorAll<HTMLElement>(SEL_BTN_MORE).forEach((trigger) => {\n    // Get the container of the trigger button\n    // This container should have both .show-more-btn and .show-less-btn\n    const btnContainer = trigger.closest<HTMLElement>(\"div.inner\")\n\n    if (!btnContainer) {\n      return\n    }\n\n    let moreElems: NodeListOf<HTMLElement>\n    // Search the same column as the .show-more-btn for .show-more elements.\n\n    try {\n      moreElems = btnContainer.querySelectorAll<HTMLElement>(\n        \".c-wrapper:has(.show-more)\"\n      )\n    } catch (err) {\n      console.warn('Browser does not support :has query selector')\n      btnContainer.classList.add(DISABLED_CLASS)\n      // TODO: implement a custom :has query function that gets the parent\n      // wrappers of .show-more elements. It's a pain to create a NodeList.\n      // One option is to get the IDs of the wrappers and then pass them\n      // into document.querySelectorAll.\n      return\n    }\n\n    // If .show-more elements were not found, go up a level and\n    // search for rows with .show-more\n    if (moreElems?.length === 0 && btnContainer.parentNode) {\n      const parentRow = trigger.closest(\".c-row\")\n      if (parentRow?.parentNode) {\n        // Find all sibling rows with the '.show-more' class\n        moreElems = parentRow.parentNode.querySelectorAll<HTMLElement>(SEL_ROWS)\n      }\n    }\n\n    if (moreElems?.length === 0) {\n      btnContainer.classList.add(DISABLED_CLASS)\n      // TODO: console log warning\n    } else {\n      // Hide the .show-more elements until the .show-more-btn is clicked\n      moreElems.forEach((elem) => {\n        elem.classList.add(HIDE_CLASS, WRAPPER_CLASS)\n      })\n      observeAndListen(trigger, btnContainer, moreElems)\n    }\n  })\n}\n\nconst init = () => {\n  if (\n    document.readyState === \"complete\" ||\n    document.readyState === \"interactive\"\n  ) {\n    setTimeout(run, 10)\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      setTimeout(run, 10)\n    })\n  }\n}\n\nexport default {\n  init,\n  run,\n}\n","// Theme default variables are set on :root in defaults.scss\n// e.g. --theme-default-primary-color\n// Due to mixed browser support for using @property initial values\n// when a css value is invalid, this javascript code is needed.\n// It sets the theme css variables to the default values if the\n// theme variable is invalid.\nconst themeVariablesDefaults = [\n  \"theme-primary-color\",\n  \"theme-secondary-color\",\n  \"theme-text-headline-color\",\n  \"theme-text-content-color\",\n  \"theme-text-bold-color\",\n  \"theme-text-italic-color\",\n  \"theme-text-underlined-color\",\n  \"theme-text-link-color\",\n  \"theme-text-highlight-color\",\n  \"theme-text-dark-bg-color\",\n  \"theme-icon-color\",\n  \"theme-button-primary-text-color\",\n  \"theme-button-primary-bg-color\",\n  \"theme-button-secondary-text-color\",\n  \"theme-button-secondary-bg-color\",\n  \"theme-background-1-color\",\n  \"theme-background-2-color\",\n  \"theme-background-3-color\",\n]\n\nconst globalVariables = [\n  \"headlinefont\",\n  \"contentfont\",\n]\n\nexport function setCSSDefaults(): void {\n  // Set invalid theme variables to default value\n  themeVariablesDefaults.forEach((name) => {\n    const themeVar = `--${name}`\n    // Check if theme variable is improperly set\n    if (\n      getComputedStyle(document.documentElement)\n        .getPropertyValue(themeVar)\n        .trim().length < 2\n    ) {\n      // Set to default value\n      const defaultValue = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(`--default-${name}`)\n      document.documentElement.style.setProperty(themeVar, defaultValue)\n      console.log(`${themeVar} set to default:`, defaultValue)\n    }\n  })\n  // Set global variables if global override is set.\n  // e.g. Set --headlinefont to --global-headlinefont if the global is set.\n  // Globals act as overrides for GHL or other root variables.\n  globalVariables.forEach((name) => {\n    const varName = `--global-${name}`\n    const value = getComputedStyle(document.documentElement)\n      .getPropertyValue(varName)\n      .trim()\n    // Set the root variable if the global variable is set\n    if (value.replace(/[\"']/g, \"\").length > 0) {\n      document.documentElement.style.setProperty(name, value)\n      console.log(`--${name} set to global value:`, value)\n    }\n  })\n}\n","/**\n * Animate\n */\n\n// Animates elements when scrolled into view.\n// When page loads, animation classes are removed from elements\n// then added back when scrolled into view.\n\n// TODO: for infinite animations, keep observer active\n//    and disable animation when out of view\n\nconst ANIMATE_SELECTOR = \"[class*=animate-]\"\n\ninterface AnimateElem extends HTMLElement {\n  dataset: {\n    animate: string\n  }\n}\n\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const elem = entry.target as AnimateElem\n      elem.classList.add(...elem.dataset.animate.split(\",\"))\n      observer.unobserve(elem)\n    }\n  })\n})\n\nconst processElem = async (elem: AnimateElem) => {\n  const animClasses: Array<string> = []\n  elem.classList.forEach((cls) => {\n    if (cls.substring(0, 8) === \"animate-\") {\n      animClasses.push(cls)\n    }\n  })\n  elem.dataset.animate = animClasses.join(\",\")\n  elem.classList.remove(...animClasses)\n  observer.observe(elem)\n}\n\nconst run = () => {\n  document.querySelectorAll<AnimateElem>(ANIMATE_SELECTOR).forEach((elem) => {\n    processElem(elem)\n  })\n}\n\nconst init = async () => {\n  if (\n    document.readyState === \"complete\" ||\n    document.readyState === \"interactive\"\n  ) {\n    setTimeout(run, 10)\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      setTimeout(run, 10)\n    })\n  }\n}\n\nexport default { init }\n","import showMore from \"./components/show-more\"\nimport { setCSSDefaults } from \"./components/defaults\"\nimport animate from \"./components/animate\";\n\nsetCSSDefaults()\nshowMore.init()\nanimate.init()\n\nconsole.log(`__theme_name__ v: __theme_version__`)\nconsole.log(`__theme_website__`)\n"],"names":["SEL_BTN_MORE","SEL_BTN_LESS","SEL_ROWS","ENABLED_CLASS","HIDE_CLASS","WRAPPER_CLASS","DISABLED_CLASS","addClickListeners","btnRow","listener","btn","observeAndListen","trigger","btnContainer","moreElems","onClick","event","observer","enabled","elem","list","obs","run","err","parentRow","o$1","themeVariablesDefaults","globalVariables","setCSSDefaults","name","themeVar","defaultValue","varName","value","o","t","s","d","r","a","n","i","E","ANIMATE_SELECTOR","entries","entry","processElem","__async","animClasses","cls","showMore","animate"],"mappings":"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"}