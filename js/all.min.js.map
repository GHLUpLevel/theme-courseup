{"version":3,"file":"all.min.js","sources":["../../src/js/components/showMore.ts","../../src/js/components/defaults.ts","../../src/js/components/animate.ts","../../src/js/components/topnav.ts","../../src/js/all.ts"],"sourcesContent":["/**\n * Show More Button & Rows\n */\n\n//  This is useful since GHL's built-in show/hide section feature on buttons requires\n//  the element to be shown is already hidden in the editor. Hidden elements are hard\n//  to edit since they need to be manually unhidden in the layers panel, edited, and\n//  then hidden again.\n//\n//  To use this Show More feature, add a .show-more class to a trigger button and then\n//  add the .show-more class to one or more rows beneath the button. On load, the rows\n//  will be auto hidden until the button is clicked.\n\nconst SEL_BTN_MORE = \".show-more-btn\"\nconst SEL_BTN_LESS = \".show-less-btn\"\nconst SEL_ROWS = \".c-row.show-more\"\n// Class added to parent of .show-more-btn when button is clicked (\"enabled\")\nconst ENABLED_CLASS = \"show-more-enabled\"\n// Added to show more wrappers to hide them before show more button is clicked\nconst HIDE_CLASS = \"show-more-hide\"\n// Wrapper elements containing .show-more\nconst WRAPPER_CLASS = \"show-more-wrapper\"\n// Class added to elements when show more is disabled\nconst DISABLED_CLASS = \"show-more-disabled\"\n\ntype Listener = (this: HTMLElement, event: Event) => void\n\nconst addClickListeners = (btnRow: Element, listener: Listener) => {\n  btnRow\n    .querySelectorAll(`${SEL_BTN_MORE},${SEL_BTN_LESS}`)\n    .forEach((btn: Element) => {\n      btn.addEventListener(\"click\", listener)\n    })\n}\n\nconst observeAndListen = (\n  trigger: HTMLElement,\n  btnContainer: HTMLElement,\n  moreElems: NodeListOf<HTMLElement>\n) => {\n  function onClick(this: HTMLElement, event: Event) {\n    event.preventDefault()\n    event.stopImmediatePropagation()\n\n    // Disconnect the observer since we know clicks are working\n    observer.disconnect()\n\n    const enabled = btnContainer.classList.contains(ENABLED_CLASS)\n    moreElems.forEach((elem) => {\n      elem.classList[enabled ? \"add\" : \"remove\"](HIDE_CLASS)\n    })\n    // Add/remove .show-more-enabled to button container\n    // This triggers css to change which buttons are displayed\n    btnContainer.classList[enabled ? \"remove\" : \"add\"](ENABLED_CLASS)\n  }\n\n  if (!trigger.parentNode || !btnContainer) {\n    return\n  }\n\n  const observer = new MutationObserver((list, obs) => {\n    // Trigger removed from DOM\n    if (!trigger.parentNode) {\n      // Cleanup old listener\n      trigger.removeEventListener(\"click\", onClick)\n      // Attach new listeners\n      addClickListeners(btnContainer, onClick)\n    }\n  })\n  observer.observe(trigger.parentNode, { childList: true })\n  addClickListeners(btnContainer, onClick)\n}\n\nconst run = () => {\n  // Get all trigger elements\n  document.querySelectorAll<HTMLElement>(SEL_BTN_MORE).forEach((trigger) => {\n    // Get the container of the trigger button\n    // This container should have both .show-more-btn and .show-less-btn\n    const btnContainer = trigger.closest<HTMLElement>(\"div.inner\")\n\n    if (!btnContainer) {\n      return\n    }\n\n    let moreElems: NodeListOf<HTMLElement>\n    // Search the same column as the .show-more-btn for .show-more elements.\n\n    try {\n      moreElems = btnContainer.querySelectorAll<HTMLElement>(\n        \".c-wrapper:has(.show-more)\"\n      )\n    } catch (err) {\n      console.warn(\"Browser does not support :has query selector\")\n      btnContainer.classList.add(DISABLED_CLASS)\n      // TODO: implement a custom :has query function that gets the parent\n      // wrappers of .show-more elements. It's a pain to create a NodeList.\n      // One option is to get the IDs of the wrappers and then pass them\n      // into document.querySelectorAll.\n      return\n    }\n\n    // If .show-more elements were not found, go up a level and\n    // search for rows with .show-more\n    if (moreElems?.length === 0 && btnContainer.parentNode) {\n      const parentRow = trigger.closest(\".c-row\")\n      if (parentRow?.parentNode) {\n        // Find all sibling rows with the '.show-more' class\n        moreElems = parentRow.parentNode.querySelectorAll<HTMLElement>(SEL_ROWS)\n      }\n    }\n\n    if (moreElems?.length === 0) {\n      btnContainer.classList.add(DISABLED_CLASS)\n      // TODO: console log warning\n    } else {\n      // Hide the .show-more elements until the .show-more-btn is clicked\n      moreElems.forEach((elem) => {\n        elem.classList.add(HIDE_CLASS, WRAPPER_CLASS)\n      })\n      observeAndListen(trigger, btnContainer, moreElems)\n    }\n  })\n}\n\nexport default {\n  run,\n}\n","// Theme default variables are set on :root in defaults.scss\n// e.g. --theme-default-primary-color\n// Due to mixed browser support for using @property initial values\n// when a css value is invalid, this javascript code is needed.\n// It sets the theme css variables to the default values if the\n// theme variable is invalid.\nconst themeVariablesDefaults = [\n  \"theme-primary-color\",\n  \"theme-secondary-color\",\n  \"theme-accent-color\",\n  \"theme-attention-color\",\n  \"theme-text-headline-color\",\n  \"theme-text-content-color\",\n  \"theme-text-link-color\",\n  \"theme-text-dark-bg-color\",\n  \"theme-icon-color\",\n  \"theme-button-primary-text-color\",\n  \"theme-button-primary-bg-color\",\n  \"theme-background-1-color\",\n  \"theme-background-2-color\",\n  \"theme-background-dark-color\",\n]\n\nconst globalVariables = [\n  \"headlinefont\",\n  \"contentfont\",\n]\n\nexport function setCSSDefaults(): void {\n  // Set invalid theme variables to default value\n  themeVariablesDefaults.forEach((name) => {\n    const themeVar = `--${name}`\n    // Check if theme variable is improperly set\n    if (\n      getComputedStyle(document.documentElement)\n        .getPropertyValue(themeVar)\n        .trim().length < 2\n    ) {\n      // Set to default value\n      const defaultValue = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(`--default-${name}`)\n      document.documentElement.style.setProperty(themeVar, defaultValue)\n      console.log(`__theme_name__: ${themeVar} set to default:`, defaultValue)\n    }\n  })\n  // Set global variables if global override is set.\n  // e.g. Set --headlinefont to --global-headlinefont if the global is set.\n  // Globals act as overrides for GHL or other root variables.\n  globalVariables.forEach((name) => {\n    const varName = `--global-${name}`\n    const value = getComputedStyle(document.documentElement)\n      .getPropertyValue(varName)\n      .trim()\n    // Set the root variable if the global variable is set\n    if (value.replace(/[\"']/g, \"\").length > 0) {\n      document.documentElement.style.setProperty(`--${name}`, value)\n      console.log(`__theme_name__: --${name} set to global value:`, value)\n    }\n  })\n}\n","/**\n * Animate & Adorn\n */\n\n// Animates elements when scrolled into view.\n// When page loads, animation classes are removed from elements\n// then added back when scrolled into view.\n\n// TODO: for infinite animations, keep observer active\n//    and disable animation when out of view\n\nconst SELECTOR = \":is([class*=animate-], [class*=adorn-])\"\nconst PLAY_CLASS = \"animate-play\"\n\n// List of animation classes partial matches that require parent overflow:clip.\n// Prevents side scrolling of the page due to animation or adornment position.\nconst CLIP_CLASSES = [\"animate-fadeIn\", \"adorn-\"]\n\ninterface AnimateElem extends HTMLElement {\n  dataset: {\n    animate: string\n  }\n}\n\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const elem = entry.target as AnimateElem\n      observer.unobserve(elem)\n      elem.classList.add(PLAY_CLASS)\n    }\n  })\n})\n\nconst needsClipping = (classList: DOMTokenList) => {\n  for (const cls of CLIP_CLASSES) {\n    if (classList.value.includes(cls)) {\n      return true\n    }\n  }\n  return false\n}\n\nconst run = () => {\n  document\n    .querySelectorAll<AnimateElem>(SELECTOR)\n    .forEach((elem: HTMLElement) => {\n      if (needsClipping(elem.classList) && elem.parentElement) {\n        const section = elem.closest(\".c-section\") as HTMLElement | null\n        const clipElem = section ? section : elem.parentElement\n        clipElem.style.overflowX = \"clip\"\n      }\n      observer.observe(elem)\n    })\n}\n\nexport default {\n  run,\n}\n","/**\n * TOP NAV & BANNER\n * Add scroll class to sticky topnav if animate-timeline: scroll() is not supported\n */\n\n// TODO: calculate topnav margin-block size and set a variable on banner to\n// allow for topnav animation to shrink margin and banner to translate up.\n\nconst POLYFILL_DELAY = 1000\nconst TOPNAV_SELECTOR = \".topnav\"\nconst SCROLL_CLASS = \"scroll\"\nconst BANNER_SELECTOR = \".notification-banner\"\nconst BANNER_HIDE_CLASS = \"banner-hide\"\nconst BANNER_FIXED_CLASS = \"banner-fixed\"\nconst TOPNAV_FIXED_CLASS = \"topnav-fixed\"\nconst BODY_SELECTOR = \"body\"\nconst CONTAINER_SELECTOR = \"#preview-container\"\nlet REPOSITIONED = false\n\n// TODO: move debounce to lib\nfunction debounce(func: () => void, wait: number): () => void {\n  let timeout: number | undefined\n  return function executedFunction(): void {\n    const later = (): void => {\n      clearTimeout(timeout)\n      func()\n    }\n    clearTimeout(timeout)\n    timeout = window.setTimeout(later, wait)\n  }\n}\n\nconst observeResize = (banner: HTMLElement, topnav: HTMLElement) => {\n  function onViewportResize(): void {\n    positionBanner(banner, topnav, true, true)\n  }\n  window.addEventListener(\"resize\", debounce(onViewportResize, 200))\n}\n\nconst observeTopnav = (banner: HTMLElement, topnav: HTMLElement) => {\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.attributeName === \"style\") {\n        const pos = getComputedStyle(topnav).getPropertyValue(\"position\")\n        if (pos === \"fixed\") {\n          observer.disconnect()\n          if (!REPOSITIONED) {\n            observeResize(banner, topnav)\n            positionBanner(banner, topnav)\n          }\n        }\n      }\n    })\n  })\n  observer.observe(topnav, {\n    attributes: true,\n    attributeFilter: [\"style\"],\n  })\n  return observer\n}\n\nconst getBlockPadding = (elem: HTMLElement): string => {\n  const top = getComputedStyle(elem).getPropertyValue(\"padding-top\")\n  const bottom = getComputedStyle(elem).getPropertyValue(\"padding-bottom\")\n  const total = [top, bottom].reduce((acc, cur) => {\n    return parseInt(cur, 10) + acc\n  }, 0)\n  return `${total}px`\n}\n\n// Position banner when topnav is position:fixed\n// When topnav is not fixed, banner CSS handles the positioning\nconst positionBanner = (\n  banner: HTMLElement,\n  topnav: HTMLElement,\n  smooth = false,\n  setTopMargin = true\n) => {\n  if (!banner || !topnav) {\n    return\n  }\n  // console.log(\"positionBanner:\", banner, topnav)\n  // const scrollAnim = CSS.supports(\"animation-timeline: scroll()\")\n\n  const root = document.documentElement\n  const navRect = topnav.getBoundingClientRect()\n  const bannerRect = banner.getBoundingClientRect()\n  const container = document.querySelector(CONTAINER_SELECTOR) as HTMLElement\n\n  if (!container) {\n    // Return if container is not avilable, leaving banner in default state\n    return\n  }\n  if (smooth) {\n    // Set smooth transition on preview container margin-top change\n    container.style.setProperty(\"transition\", \"margin-top .3s ease-out\")\n  }\n\n  // TODO: finish debugging banner not positioning correctly on Chrome when\n  // scrolled and resized. Banner partially disappears behind top nav.\n  // Probably need to cache the initial padding or height of topnav before scroll animation\n  // takes effect. Then on resize, get the topnav height + the original cached\n  // padding. The problem is when it calculates the new height but isn't taking\n  // the current scroll position (adjustment) into account. It effectively resets\n  // the calculations using incorrect starting height & padding.\n  banner.classList.add(BANNER_FIXED_CLASS)\n  topnav.classList.add(TOPNAV_FIXED_CLASS)\n\n  let offset = navRect.bottom\n  let totalHeight = offset\n\n  const bannerPos = getComputedStyle(banner).getPropertyValue(\"position\")\n  if (bannerPos === \"fixed\") {\n    if (!banner.classList.contains(BANNER_HIDE_CLASS)) {\n      offset += bannerRect.height\n      totalHeight += bannerRect.height\n    }\n    if (banner.nextElementSibling) {\n      offset += parseInt(\n        getComputedStyle(banner.nextElementSibling).getPropertyValue(\n          \"margin-top\"\n        )\n      )\n    }\n  }\n\n  banner.style.setProperty(\"--topnav-padding\", getBlockPadding(topnav))\n  root.style.setProperty(\"--sticky-topnav-bottom\", `${navRect.bottom}px`)\n  // Set height of top level sticky elements for .sticky classes to use\n  // TODO: make sure height is calculated when page first loads in case scolling has\n  //  shrunk the padding\n  root.style.setProperty(\"--top-sticky-height\", `${totalHeight}px`)\n\n  if (setTopMargin) {\n    container.style.setProperty(\"margin-top\", `${Math.round(offset)}px`)\n  }\n\n  REPOSITIONED = true\n}\n\nconst setBanner = (topnav: HTMLElement) => {\n  const banner = document.querySelector(BANNER_SELECTOR) as HTMLElement\n\n  if (!banner) {\n    return\n  }\n  if (getComputedStyle(banner).getPropertyValue(\"display\") === \"none\") {\n    return\n  }\n\n  // Add listener to close button\n  const closeBtn = banner.querySelector(\".btn-close\")\n  closeBtn?.addEventListener(\"click\", () => {\n    banner.classList.add(BANNER_HIDE_CLASS)\n    // Reposition but don't set top margin of preview container\n    positionBanner(banner, topnav, true, false)\n  })\n\n  const navPos = getComputedStyle(topnav).getPropertyValue(\"position\")\n\n  if (navPos !== \"fixed\" || !topnav.parentElement) {\n    // Top nav is not YET fixed, observe it in case it changes\n    return observeTopnav(banner, topnav)\n  }\n  // Top nav is fixed\n  // Position the banner & setup view port resizing observer\n  positionBanner(banner, topnav)\n  observeResize(banner, topnav)\n  return\n}\n\n// Add a hidden div above the topnav to use to observe when it's scrolled\n// in and out of view. Toggle the SCROLL_CLASS accordinly to trigger\n// the box shadow and any animations defined in CSS.\nconst scrollPolyfill = (topnav: HTMLElement) => {\n  if (!topnav) {\n    return\n  }\n  console.log(\"__theme_name__: Adding nav scroll polyfill\")\n\n  const intercept = document.createElement(\"div\")\n  intercept.setAttribute(\"data-observer-intercept\", \"\")\n\n  // Insert into the body container to prevent any timing issues with vue updating the dom\n  const container = document.querySelector(BODY_SELECTOR) as HTMLElement\n  container.insertBefore(intercept, container.firstChild)\n\n  const observer = new IntersectionObserver(([entry]) => {\n    topnav.classList.toggle(SCROLL_CLASS, !entry?.isIntersecting)\n  })\n  observer.observe(intercept)\n}\n\n// Use polyfill of sorts if browser does not support animation-timeline:scroll() css\nconst run = () => {\n  const topnav = document.querySelector(TOPNAV_SELECTOR) as HTMLElement\n  setBanner(topnav)\n  if (CSS.supports(\"animation-timeline:scroll()\")) {\n    return\n  }\n  // Delay to allow  time for vue to update topnav\n  setTimeout(() => {\n    scrollPolyfill(topnav)\n  }, POLYFILL_DELAY)\n}\n\nexport default {\n  run,\n}\n","import showMore from \"./components/showMore\"\nimport { setCSSDefaults } from \"./components/defaults\"\nimport animate from \"./components/animate\"\nimport topnav from \"./components/topnav\"\n\nconst run = () => {\n  // topnav and shoMore do not need delays\n  // They have their own observer systems\n  topnav.run()\n  showMore.run()\n  // Delay for brief time before starting animations in view\n  setTimeout(animate.run, 100)\n}\n\nconst init = () => {\n  // Wait for document to load\n  if (\n    document.readyState === \"complete\" ||\n    document.readyState === \"interactive\"\n  ) {\n    setTimeout(run, 10)\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      setTimeout(run, 10)\n    })\n  }\n}\n\nconsole.log(`Powered by __theme_name__ __theme_version__:`, \"__theme_website__\")\n\nsetCSSDefaults()\ninit()\n\n"],"names":["SEL_BTN_MORE","SEL_BTN_LESS","SEL_ROWS","ENABLED_CLASS","HIDE_CLASS","WRAPPER_CLASS","DISABLED_CLASS","addClickListeners","btnRow","listener","btn","observeAndListen","trigger","btnContainer","moreElems","onClick","event","observer","enabled","elem","list","obs","err","parentRow","themeVariablesDefaults","globalVariables","setCSSDefaults","name","themeVar","defaultValue","varName","value","SELECTOR","PLAY_CLASS","CLIP_CLASSES","entries","entry","needsClipping","classList","cls","m$1","section","clipElem","TOPNAV_SELECTOR","SCROLL_CLASS","BANNER_SELECTOR","BANNER_HIDE_CLASS","BANNER_FIXED_CLASS","TOPNAV_FIXED_CLASS","BODY_SELECTOR","CONTAINER_SELECTOR","REPOSITIONED","debounce","func","wait","timeout","later","observeResize","banner","topnav","onViewportResize","positionBanner","observeTopnav","mutations","mutation","getBlockPadding","top","bottom","acc","cur","smooth","setTopMargin","root","navRect","bannerRect","container","offset","totalHeight","setBanner","closeBtn","scrollPolyfill","intercept","run","showMore","animate","init"],"mappings":"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"}