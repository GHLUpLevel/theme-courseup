{"version":3,"file":"all.min.js","sources":["../../src/js/components/show-more.ts","../../src/js/components/defaults.ts","../../src/js/all.ts"],"sourcesContent":["/**\n * Show More Button & Rows\n */\n\n//  This is useful since GHL's built-in show/hide section feature on buttons requires\n//  the element to be shown is already hidden in the editor. Hidden elements are hard\n//  to edit since they need to be manually unhidden in the layers panel, edited, and\n//  then hidden again.\n//\n//  To use this Show More feature, add a .show-more class to a trigger button and then\n//  add the .show-more class to one or more rows beneath the button. On load, the rows\n//  will be auto hidden until the button is clicked.\n\nconst SEL_BTN_MORE = \".c-button .show-more-btn\"\nconst SEL_BTN_LESS = \".c-button .show-less-btn\"\nconst SEL_ROWS = \".c-row.show-more\"\n// Class added to rows after show more buttin is clicked\nconst SHOWN_CLASS = \"show-more-shown\"\n// Class added to elements when show more is disabled\nconst DISABLED_CLASS = \"show-more-disabled\"\n\ntype Listener = (this: HTMLElement, event: Event) => void\n\nconst addClickListeners = (btnRow: Element, listener: Listener) => {\n  btnRow.querySelectorAll(`${SEL_BTN_MORE},${SEL_BTN_LESS}`).forEach((btn: Element) => {\n    btn.addEventListener(\"click\", listener)\n  })\n}\n\nconst toggleClass = (elem: HTMLElement, show: boolean) => {\n  if (show) {\n    elem.classList.add(SHOWN_CLASS)\n  } else {\n    elem.classList.remove(SHOWN_CLASS)\n  }\n}\n\nconst observeAndListen = (\n  trigger: HTMLElement,\n  parentRow: HTMLElement,\n  rows: NodeListOf<HTMLElement>\n) => {\n  function listener(this: HTMLElement, event: Event) {\n    event.preventDefault()\n    event.stopImmediatePropagation()\n\n    // Disconnect the observer since we know clicks are working\n    observer.disconnect()\n\n    const isShown = parentRow.classList.contains(SHOWN_CLASS)\n    rows.forEach((row) => {\n      toggleClass(row, !isShown)\n    })\n    toggleClass(parentRow, !isShown)\n  }\n\n  if (!trigger.parentNode || !parentRow) {\n    return\n  }\n\n  const observer = new MutationObserver((list, obs) => {\n    // Trigger removed from DOM\n    if (!trigger.parentNode) {\n      // Cleanup old listener\n      trigger.removeEventListener(\"click\", listener)\n      // Attach new listeners\n      addClickListeners(parentRow, listener)\n    }\n  })\n  observer.observe(trigger.parentNode, { childList: true })\n  addClickListeners(parentRow, listener)\n}\n\nconst run = () => {\n  // Get all trigger elements\n  document.querySelectorAll<HTMLElement>(SEL_BTN_MORE).forEach((trigger) => {\n    // Get the row containing the trigger button\n    const parentRow = trigger.closest<HTMLElement>(\".c-row\")\n    if (!parentRow) {\n      return\n    }\n\n    // Find all sibling rows with the '.show-more' class\n    const rows = parentRow.parentNode?.querySelectorAll<HTMLElement>(SEL_ROWS)\n\n    if (!rows || rows.length === 0) {\n      parentRow.classList.add(DISABLED_CLASS)\n    } else {\n      observeAndListen(trigger, parentRow, rows)\n    }\n  })\n}\n\nconst init = () => {\n  if (\n    document.readyState === \"complete\" ||\n    document.readyState === \"interactive\"\n  ) {\n    setTimeout(run, 10)\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      setTimeout(run, 10)\n    })\n  }\n}\n\nexport default {\n  init,\n  run,\n}\n","// Theme default variables are set on :root in defaults.scss\n// e.g. --theme-default-primary-color\n// Due to mixed browser support for using @property initial values\n// when a css value is invalid, this javascript code is needed.\n// It sets the theme css variables to the default values if the\n// theme variable is invalid.\nconst themeVariablesDefaults = [\n  \"theme-primary-color\",\n  \"theme-secondary-color\",\n  \"theme-text-headline-color\",\n  \"theme-text-content-color\",\n  \"theme-text-bold-color\",\n  \"theme-text-italic-color\",\n  \"theme-text-underlined-color\",\n  \"theme-text-link-color\",\n  \"theme-text-highlight-color\",\n  \"theme-text-dark-bg-color\",\n  \"theme-icon-color\",\n  \"theme-button-primary-text-color\",\n  \"theme-button-primary-bg-color\",\n  \"theme-button-secondary-text-color\",\n  \"theme-button-secondary-bg-color\",\n  \"theme-background-1-color\",\n  \"theme-background-2-color\",\n  \"theme-background-3-color\",\n  \"headlinefont\",\n  \"contentfont\",\n]\n\nexport function setCSSDefaults(): void {\n  themeVariablesDefaults.forEach((name) => {\n    // Check if the variable is not set\n    const themeVar = `--theme-${name}`\n    if (\n      getComputedStyle(document.documentElement)\n        .getPropertyValue(themeVar)\n        .trim().length < 2\n    ) {\n      // Set the variable to its default value\n      const defaultValue = getComputedStyle(\n        document.documentElement\n      ).getPropertyValue(`--default-${name}`)\n      document.documentElement.style.setProperty(themeVar, defaultValue)\n      console.log(`${themeVar} set to default:`, defaultValue)\n    }\n  })\n}\n","import showMore from \"./components/show-more\"\nimport { setCSSDefaults } from \"./components/defaults\"\n\nsetCSSDefaults()\nshowMore.init()\n"],"names":["SEL_BTN_MORE","SEL_BTN_LESS","SEL_ROWS","SHOWN_CLASS","DISABLED_CLASS","addClickListeners","btnRow","listener","btn","toggleClass","elem","show","observeAndListen","trigger","parentRow","rows","event","observer","isShown","row","list","obs","run","_a","o","themeVariablesDefaults","setCSSDefaults","name","themeVar","defaultValue","showMore"],"mappings":"yBAaA,MAAMA,EAAe,2BACfC,EAAe,2BACfC,EAAW,mBAEXC,EAAc,kBAEdC,EAAiB,qBAIjBC,EAAoB,CAACC,EAAiBC,IAAuB,CACjED,EAAO,iBAAiB,GAAGN,CAAY,IAAIC,CAAY,EAAE,EAAE,QAASO,GAAiB,CACnFA,EAAI,iBAAiB,QAASD,CAAQ,CACxC,CAAC,CACH,EAEME,EAAc,CAACC,EAAmBC,IAAkB,CACpDA,EACFD,EAAK,UAAU,IAAIP,CAAW,EAE9BO,EAAK,UAAU,OAAOP,CAAW,CAErC,EAEMS,EAAmB,CACvBC,EACAC,EACAC,IACG,CACH,SAASR,EAA4BS,EAAc,CACjDA,EAAM,eAAA,EACNA,EAAM,2BAGNC,EAAS,WAAW,EAEpB,MAAMC,EAAUJ,EAAU,UAAU,SAASX,CAAW,EACxDY,EAAK,QAASI,GAAQ,CACpBV,EAAYU,EAAK,CAACD,CAAO,CAC3B,CAAC,EACDT,EAAYK,EAAW,CAACI,CAAO,CACjC,CAEA,GAAI,CAACL,EAAQ,YAAc,CAACC,EAC1B,OAGF,MAAMG,EAAW,IAAI,iBAAiB,CAACG,EAAMC,IAAQ,CAE9CR,EAAQ,aAEXA,EAAQ,oBAAoB,QAASN,CAAQ,EAE7CF,EAAkBS,EAAWP,CAAQ,EAEzC,CAAC,EACDU,EAAS,QAAQJ,EAAQ,WAAY,CAAE,UAAW,EAAK,CAAC,EACxDR,EAAkBS,EAAWP,CAAQ,CACvC,EAEMe,EAAM,IAAM,CAEhB,SAAS,iBAA8BtB,CAAY,EAAE,QAASa,GAAY,CA3E5E,IAAAU,EA6EI,MAAMT,EAAYD,EAAQ,QAAqB,QAAQ,EACvD,GAAI,CAACC,EACH,OAIF,MAAMC,GAAOQ,EAAAT,EAAU,aAAV,KAAAS,OAAAA,EAAsB,iBAA8BrB,CAE7D,EAAA,CAACa,GAAQA,EAAK,SAAW,EAC3BD,EAAU,UAAU,IAAIV,CAAc,EAEtCQ,EAAiBC,EAASC,EAAWC,CAAI,CAE7C,CAAC,CACH,EAeA,IAAeS,EAAA,CACb,KAdW,IAAM,CAEf,SAAS,aAAe,YACxB,SAAS,aAAe,cAExB,WAAWF,EAAK,EAAE,EAElB,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,WAAWA,EAAK,EAAE,CACpB,CAAC,CAEL,EAIE,IAAAA,CACF,ECvGA,MAAMG,EAAyB,CAC7B,sBACA,wBACA,4BACA,2BACA,wBACA,0BACA,8BACA,wBACA,6BACA,2BACA,mBACA,kCACA,gCACA,oCACA,kCACA,2BACA,2BACA,2BACA,eACA,aACF,EAEO,SAASC,GAAuB,CACrCD,EAAuB,QAASE,GAAS,CAEvC,MAAMC,EAAW,WAAWD,CAAI,GAChC,GACE,iBAAiB,SAAS,eAAe,EACtC,iBAAiBC,CAAQ,EACzB,OAAO,OAAS,EACnB,CAEA,MAAMC,EAAe,iBACnB,SAAS,eACX,EAAE,iBAAiB,aAAaF,CAAI,EAAE,EACtC,SAAS,gBAAgB,MAAM,YAAYC,EAAUC,CAAY,EACjE,QAAQ,IAAI,GAAGD,CAAQ,mBAAoBC,CAAY,CACzD,CACF,CAAC,CACH,CC3CAH,EACAI,EAAAA,EAAS,KAAK"}