{"version":3,"file":"topnav.js","sources":["../../../src/js/components/topnav.ts"],"sourcesContent":["/**\n * TOP NAV & BANNER\n * Add scroll class to sticky topnav if animate-timeline: scroll() is not supported\n */\n\n// TODO: calculate topnav margin-block size and set a variable on banner to\n// allow for topnav animation to shrink margin and banner to translate up.\n\nconst POLYFILL_DELAY = 1000\nconst TOPNAV_SELECTOR = \".topnav\"\nconst SCROLL_CLASS = \"scroll\"\nconst BANNER_SELECTOR = \".notification-banner\"\nconst BANNER_HIDE_CLASS = \"banner-hide\"\nconst BANNER_FIXED_CLASS = \"banner-fixed\"\nconst BODY_SELECTOR = \"body\"\nconst CONTAINER_SELECTOR = \"#preview-container\"\nlet REPOSITIONED = false\n\n// TODO: move debounce to lib\nfunction debounce(func: () => void, wait: number): () => void {\n  let timeout: number | undefined\n  return function executedFunction(): void {\n    const later = (): void => {\n      clearTimeout(timeout)\n      func()\n    }\n    clearTimeout(timeout)\n    timeout = window.setTimeout(later, wait)\n  }\n}\n\nconst observeResize = (banner: HTMLElement, topnav: HTMLElement) => {\n  function onViewportResize(): void {\n    positionBanner(banner, topnav, true)\n  }\n  window.addEventListener(\"resize\", debounce(onViewportResize, 200))\n}\n\nconst observeTopnav = (banner: HTMLElement, topnav: HTMLElement) => {\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.attributeName === \"style\") {\n        const pos = getComputedStyle(topnav).getPropertyValue(\"position\")\n        if (pos === \"fixed\") {\n          observer.disconnect()\n          if (!REPOSITIONED) {\n            observeResize(banner, topnav)\n            positionBanner(banner, topnav)\n          }\n        }\n      }\n    })\n  })\n  observer.observe(topnav, {\n    attributes: true,\n    attributeFilter: [\"style\"],\n  })\n  return observer\n}\n\n// Position banner when topnav is position:fixed\n// When topnav is not fixed, banner CSS handles the positioning\nconst positionBanner = (banner: HTMLElement, topnav: HTMLElement, smooth = false) => {\n  if (!banner || !topnav) {\n    return\n  }\n  // console.log(\"positionBanner:\", banner, topnav)\n  const navRect = topnav.getBoundingClientRect()\n  const bannerRect = banner.getBoundingClientRect()\n  const container = document.querySelector(CONTAINER_SELECTOR) as HTMLElement\n  if (!container) {\n    // Return if container is not avilable, leaving banner in default state\n    return\n  }\n  banner.classList.add(BANNER_FIXED_CLASS)\n\n  if (smooth) {\n    // Set smooth transition on preview container margin-top change\n    const container = document.querySelector(CONTAINER_SELECTOR) as HTMLElement\n    container.style.setProperty(\"transition\", \"margin-top .3s ease-out\")\n  }\n\n  container.style.setProperty(\"--topnav-height\", `${navRect.bottom}px`)\n  let siblingMargin = \"\"\n  if (banner.nextElementSibling) {\n    siblingMargin = getComputedStyle(\n      banner.nextElementSibling\n    ).getPropertyValue(\"margin-top\")\n  }\n  const bannerPos = getComputedStyle(banner).getPropertyValue(\"position\")\n  let offset = navRect.bottom\n  if (bannerPos === \"fixed\") {\n    offset += bannerRect.height + parseInt(siblingMargin)\n  }\n  container.style.setProperty(\"margin-top\", `${Math.round(offset)}px`)\n\n  REPOSITIONED = true\n}\n\nconst setBanner = (topnav: HTMLElement) => {\n  const banner = document.querySelector(BANNER_SELECTOR) as HTMLElement\n\n  if (!banner) {\n    return\n  }\n  if (getComputedStyle(banner).getPropertyValue(\"display\") === \"none\") {\n    return\n  }\n\n  // Listen for click event on banner close button\n  function closeEvent(this: HTMLElement, event: Event) {\n    banner.classList.add(BANNER_HIDE_CLASS)\n    setTimeout(() => {\n      positionBanner(banner, topnav, true)\n    }, 300)\n  }\n  const closeBtn = banner.querySelector(\".btn-close\")\n  closeBtn?.addEventListener(\"click\", closeEvent)\n\n  const navPos = getComputedStyle(topnav).getPropertyValue(\"position\")\n\n  if (navPos !== \"fixed\" || !topnav.parentElement) {\n    // Top nav is not YET fixed, observe it in case it changes\n    return observeTopnav(banner, topnav)\n  }\n  // Top nav is fixed\n  observeResize(banner, topnav)\n  return positionBanner(banner, topnav)\n}\n\n// Add a hidden div above the topnav to use to observe when it's scrolled\n// in and out of view. Toggle the SCROLL_CLASS accordinly to trigger\n// the box shadow and any animations defined in CSS.\nconst scrollPolyfill = (topnav: HTMLElement) => {\n  if (!topnav) {\n    return\n  }\n  console.log(\"__theme_name__: Adding nav scroll polyfill\")\n\n  const intercept = document.createElement(\"div\")\n  intercept.setAttribute(\"data-observer-intercept\", \"\")\n\n  // Insert into the body container to prevent any timing issues with vue updating the dom\n  const container = document.querySelector(BODY_SELECTOR) as HTMLElement\n  container.insertBefore(intercept, container.firstChild)\n\n  const observer = new IntersectionObserver(([entry]) => {\n    topnav.classList.toggle(SCROLL_CLASS, !entry?.isIntersecting)\n  })\n  observer.observe(intercept)\n}\n\n// Use polyfill of sorts if browser does not support animation-timeline:scroll() css\nconst run = () => {\n  const topnav = document.querySelector(TOPNAV_SELECTOR) as HTMLElement\n  setBanner(topnav)\n  if (CSS.supports(\"animation-timeline:scroll()\")) {\n    return\n  }\n  // Delay to allow  time for vue to update topnav\n  setTimeout(() => {\n    scrollPolyfill(topnav)\n  }, POLYFILL_DELAY)\n}\n\nexport default {\n  run,\n}\n"],"names":["container"],"mappings":"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"}