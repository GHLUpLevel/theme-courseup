{"version":3,"file":"show-more.js","sources":["../../../src/js/components/show-more.ts"],"sourcesContent":["/**\n * Show More Button & Rows\n */\n\n//  This is useful since GHL's built-in show/hide section feature on buttons requires\n//  the element to be shown is already hidden in the editor. Hidden elements are hard\n//  to edit since they need to be manually unhidden in the layers panel, edited, and\n//  then hidden again.\n//\n//  To use this Show More feature, add a .show-more class to a trigger button and then\n//  add the .show-more class to one or more rows beneath the button. On load, the rows\n//  will be auto hidden until the button is clicked.\n\nconst SEL_BTN_MORE = \".c-button .show-more-btn\"\nconst SEL_BTN_LESS = \".c-button .show-less-btn\"\nconst SEL_ROWS = \".c-row.show-more\"\n// Class added to rows after show more buttin is clicked\nconst SHOWN_CLASS = \"show-more-shown\"\n// Class added to elements when show more is disabled\nconst DISABLED_CLASS = \"show-more-disabled\"\n\ntype Listener = (this: HTMLElement, event: Event) => void\n\nconst addClickListeners = (btnRow: Element, listener: Listener) => {\n  btnRow.querySelectorAll(`${SEL_BTN_MORE},${SEL_BTN_LESS}`).forEach((btn: Element) => {\n    btn.addEventListener(\"click\", listener)\n  })\n}\n\nconst toggleClass = (elem: HTMLElement, show: boolean) => {\n  if (show) {\n    elem.classList.add(SHOWN_CLASS)\n  } else {\n    elem.classList.remove(SHOWN_CLASS)\n  }\n}\n\nconst observeAndListen = (\n  trigger: HTMLElement,\n  parentRow: HTMLElement,\n  rows: NodeListOf<HTMLElement>\n) => {\n  function listener(this: HTMLElement, event: Event) {\n    event.preventDefault()\n    event.stopImmediatePropagation()\n\n    // Disconnect the observer since we know clicks are working\n    observer.disconnect()\n\n    const isShown = parentRow.classList.contains(SHOWN_CLASS)\n    rows.forEach((row) => {\n      toggleClass(row, !isShown)\n    })\n    toggleClass(parentRow, !isShown)\n  }\n\n  if (!trigger.parentNode || !parentRow) {\n    return\n  }\n\n  const observer = new MutationObserver((list, obs) => {\n    // Trigger removed from DOM\n    if (!trigger.parentNode) {\n      // Cleanup old listener\n      trigger.removeEventListener(\"click\", listener)\n      // Attach new listeners\n      addClickListeners(parentRow, listener)\n    }\n  })\n  observer.observe(trigger.parentNode, { childList: true })\n  addClickListeners(parentRow, listener)\n}\n\nconst run = () => {\n  // Get all trigger elements\n  document.querySelectorAll<HTMLElement>(SEL_BTN_MORE).forEach((trigger) => {\n    // Get the row containing the trigger button\n    const parentRow = trigger.closest<HTMLElement>(\".c-row\")\n    if (!parentRow) {\n      return\n    }\n\n    // Find all sibling rows with the '.show-more' class\n    const rows = parentRow.parentNode?.querySelectorAll<HTMLElement>(SEL_ROWS)\n\n    if (!rows || rows.length === 0) {\n      parentRow.classList.add(DISABLED_CLASS)\n    } else {\n      observeAndListen(trigger, parentRow, rows)\n    }\n  })\n}\n\nconst init = () => {\n  if (\n    document.readyState === \"complete\" ||\n    document.readyState === \"interactive\"\n  ) {\n    setTimeout(run, 10)\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      setTimeout(run, 10)\n    })\n  }\n}\n\nexport default {\n  init,\n  run,\n}\n"],"names":[],"mappings":"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"}