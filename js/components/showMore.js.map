{"version":3,"file":"showMore.js","sources":["../../../src/js/components/showMore.ts"],"sourcesContent":["/**\n * Show More Button & Rows\n */\n\n//  This is useful since GHL's built-in show/hide section feature on buttons requires\n//  the element to be shown is already hidden in the editor. Hidden elements are hard\n//  to edit since they need to be manually unhidden in the layers panel, edited, and\n//  then hidden again.\n//\n//  To use this Show More feature, add a .show-more class to a trigger button and then\n//  add the .show-more class to one or more rows beneath the button. On load, the rows\n//  will be auto hidden until the button is clicked.\n\nconst SEL_BTN_MORE = \".show-more-btn\"\nconst SEL_BTN_LESS = \".show-less-btn\"\nconst SEL_ROWS = \".c-row.show-more\"\n// Class added to parent of .show-more-btn when button is clicked (\"enabled\")\nconst ENABLED_CLASS = \"show-more-enabled\"\n// Added to show more wrappers to hide them before show more button is clicked\nconst HIDE_CLASS = \"show-more-hide\"\n// Wrapper elements containing .show-more\nconst WRAPPER_CLASS = \"show-more-wrapper\"\n// Class added to elements when show more is disabled\nconst DISABLED_CLASS = \"show-more-disabled\"\n\ntype Listener = (this: HTMLElement, event: Event) => void\n\nconst addClickListeners = (btnRow: Element, listener: Listener) => {\n  btnRow\n    .querySelectorAll(`${SEL_BTN_MORE},${SEL_BTN_LESS}`)\n    .forEach((btn: Element) => {\n      btn.addEventListener(\"click\", listener)\n    })\n}\n\nconst observeAndListen = (\n  trigger: HTMLElement,\n  btnContainer: HTMLElement,\n  moreElems: NodeListOf<HTMLElement>\n) => {\n  function onClick(this: HTMLElement, event: Event) {\n    event.preventDefault()\n    event.stopImmediatePropagation()\n\n    // Disconnect the observer since we know clicks are working\n    observer.disconnect()\n\n    const enabled = btnContainer.classList.contains(ENABLED_CLASS)\n    moreElems.forEach((elem) => {\n      elem.classList[enabled ? \"add\" : \"remove\"](HIDE_CLASS)\n    })\n    // Add/remove .show-more-enabled to button container\n    // This triggers css to change which buttons are displayed\n    btnContainer.classList[enabled ? \"remove\" : \"add\"](ENABLED_CLASS)\n  }\n\n  if (!trigger.parentNode || !btnContainer) {\n    return\n  }\n\n  const observer = new MutationObserver((list, obs) => {\n    // Trigger removed from DOM\n    if (!trigger.parentNode) {\n      // Cleanup old listener\n      trigger.removeEventListener(\"click\", onClick)\n      // Attach new listeners\n      addClickListeners(btnContainer, onClick)\n    }\n  })\n  observer.observe(trigger.parentNode, { childList: true })\n  addClickListeners(btnContainer, onClick)\n}\n\nconst run = () => {\n  // Get all trigger elements\n  document.querySelectorAll<HTMLElement>(SEL_BTN_MORE).forEach((trigger) => {\n    // Get the container of the trigger button\n    // This container should have both .show-more-btn and .show-less-btn\n    const btnContainer = trigger.closest<HTMLElement>(\"div.inner\")\n\n    if (!btnContainer) {\n      return\n    }\n\n    let moreElems: NodeListOf<HTMLElement>\n    // Search the same column as the .show-more-btn for .show-more elements.\n\n    try {\n      moreElems = btnContainer.querySelectorAll<HTMLElement>(\n        \".c-wrapper:has(.show-more)\"\n      )\n    } catch (err) {\n      console.warn(\"Browser does not support :has query selector\")\n      btnContainer.classList.add(DISABLED_CLASS)\n      // TODO: implement a custom :has query function that gets the parent\n      // wrappers of .show-more elements. It's a pain to create a NodeList.\n      // One option is to get the IDs of the wrappers and then pass them\n      // into document.querySelectorAll.\n      return\n    }\n\n    // If .show-more elements were not found, go up a level and\n    // search for rows with .show-more\n    if (moreElems?.length === 0 && btnContainer.parentNode) {\n      const parentRow = trigger.closest(\".c-row\")\n      if (parentRow?.parentNode) {\n        // Find all sibling rows with the '.show-more' class\n        moreElems = parentRow.parentNode.querySelectorAll<HTMLElement>(SEL_ROWS)\n      }\n    }\n\n    if (moreElems?.length === 0) {\n      btnContainer.classList.add(DISABLED_CLASS)\n      // TODO: console log warning\n    } else {\n      // Hide the .show-more elements until the .show-more-btn is clicked\n      moreElems.forEach((elem) => {\n        elem.classList.add(HIDE_CLASS, WRAPPER_CLASS)\n      })\n      observeAndListen(trigger, btnContainer, moreElems)\n    }\n  })\n}\n\nexport default {\n  run,\n}\n"],"names":[],"mappings":"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"}